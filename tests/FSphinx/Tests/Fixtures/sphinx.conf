#
# Sample Sphinx configuration for use with test dataset
# Also contains the actor_terms lookup index
#

source items
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            =
    sql_db              = test
    sql_port            = 3306
    sql_query_pre       = SET CHARACTER_SET_RESULTS=utf8
    sql_query_pre       = SET NAMES utf8
    # make sure we don't chop off fields with multiple values
    sql_query_pre       = set group_concat_max_len = 50000

    # search in all fields including facets
    sql_query = \
        select \
            imdb_id, \
            filename, \
            title, \
            year, \
            plot, \
            also_known_as, \
            imdb_id as id, \
            certification, \
            year as year_attr, \
            user_rating as user_rating_attr, \
            nb_votes as nb_votes_attr, \
            unix_timestamp(release_date) as release_date_attr, \
            runtime as runtime_attr, \
            (select group_concat(distinct genre) from genres as g where g.imdb_id = t.imdb_id) as genres, \
            (select group_concat(distinct director_name) from directors as d where d.imdb_id = t.imdb_id) as directors, \
            (select group_concat(distinct concat(imdb_director_id, ',', director_name)) from directors as d2 where d2.imdb_id = t.imdb_id) as director_terms_attr, \
            (select group_concat(distinct actor_name) from casts as c where c.imdb_id = t.imdb_id) as actors, \
            (select group_concat(distinct concat(imdb_actor_id, ',', actor_name)) from casts as c2 where c2.imdb_id = t.imdb_id) as actor_terms_attr, \
            (select group_concat(distinct plot_keyword) from plot_keywords as p where p.imdb_id = t.imdb_id) as plot_keywords\
        from titles as t

    # sort by year, user_ratings * nb_votes, release_date, runtime
    sql_attr_float = user_rating_attr
    sql_attr_uint = nb_votes_attr
    sql_attr_timestamp = release_date_attr
    sql_attr_uint = runtime_attr
    sql_attr_string = actor_terms_attr
    sql_attr_string = director_terms_attr

    # facets are year, directors, actors, genres, keywords
    sql_attr_uint = year_attr
    sql_attr_multi = \
        uint genre_attr from query; \
        select g.imdb_id, t.id from genres as g, genre_terms as t where g.genre = t.genre
    sql_attr_multi = \
        uint director_attr from query; \
        select imdb_id, imdb_director_id from directors
    sql_attr_multi = \
        uint actor_attr from query; \
        select imdb_id, imdb_actor_id from casts
    sql_attr_multi = \
        uint plot_keyword_attr from query; \
        select p.imdb_id, t.id from plot_keywords as p, plot_keyword_terms as t where p.plot_keyword = t.plot_keyword

    sql_query_info = \
        select \
            imdb_id, \
            filename, \
            title, \
            year, \
            plot, \
            also_known_as, \
            imdb_id as id, \
            certification, \
            year as year_attr, \
            user_rating as user_rating_attr, \
            nb_votes as nb_votes_attr, \
            unix_timestamp(release_date) as release_date_attr, \
            runtime as runtime_attr, \
            (select group_concat(distinct genre) from genres as g where g.imdb_id = t.imdb_id) as genres, \
            (select group_concat(distinct director_name) from directors as d where d.imdb_id = t.imdb_id) as directors, \
            (select group_concat(distinct actor_name) from casts as c where c.imdb_id = t.imdb_id) as actors, \
            (select group_concat(distinct plot_keyword) from plot_keywords as p where p.imdb_id = t.imdb_id) as plot_keywords\
        from titles as t \
        where imdb_id = $id
}

source actor_terms
{
    type                = mysql
    sql_host            = 127.0.0.1
    sql_user            = root
    sql_pass            =
    sql_db              = test
    sql_port            = 3306
    sql_query_pre       = SET CHARACTER_SET_RESULTS=utf8
    sql_query_pre       = SET NAMES utf8
    sql_query           = select id, actor, id as actor_id_attr, actor as actor_term_attr from actor_terms
    sql_attr_uint       = actor_id_attr
    sql_attr_string     = actor_term_attr
    sql_query_info      = select id, actor from actor_terms where id = $id
}

index items
{
    source              = items
    path                = ./data/items
    docinfo             = extern
    #morphology         = stem_en
    min_word_len        = 1 # we have to do this to search in certification field
    charset_type        = utf-8
}

index actor_terms
{
    source              = actor_terms
    path                = ./data/actor_terms
    docinfo             = extern
    charset_type        = utf-8
}

indexer
{
    mem_limit            = 300M
}

searchd
{
    listen              = 9312
    read_timeout        = 5
    max_children        = 30
    max_matches         = 50000
    seamless_rotate     = 1
    preopen_indexes     = 0
    log                 = ./log/searchd.log
    query_log           = ./log/query.log
    pid_file            = ./log/searchd.pid
    binlog_path         =
    unlink_old          = 1
    workers             = threads # for RT to work
}